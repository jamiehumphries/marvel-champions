:root {
  --container-padding: 20px;
  --container-max-width: 1600px;

  --button-background-color: #ffeba9;
  --button-background-color-hover: #ffde65;
  --button-background-color-disabled: #dddddd;
  --button-background-color-settings: #c7e6f1;
  --button-border-and-text-color: #000000;
  --button-border-and-text-color-disabled: #444444;
  --icon-button-text-color: #000000;
  --icon-button-background-color-hover: #e0e0e0;
  --icon-button-image-brightness-hover: 90%;
  --checkbox-background-color-hover: #eeeeee;
  --checkbox-border-and-check-color: #000000;

  --outline: 2px solid #6586ff;
  --outline-offset: 1px;

  --button-scale-factor: 1;
  --layout-scale-factor: 1;

  --card-header-height: 40px;
  --base-card-width: 300px;
  --base-card-height: 419px;
  --card-width: calc(var(--base-card-width) * var(--layout-scale-factor));
  --card-height: calc(var(--base-card-height) * var(--layout-scale-factor));

  --flip-duration: 1000ms;
  /* Value must match CARD_CHANGE_DELAY_MS in scripts/main.js */
  --card-change-delay: 300ms;
  --card-change-duration: calc(var(--flip-duration) - var(--card-change-delay));
}

@font-face {
  font-family: "Back Issues BB";
  src: url(fonts/BackIssuesBB_reg.otf);
}

body {
  margin: 0;
  padding: 0;

  font-family: "Back Issues BB", sans-serif;
  overflow-y: scroll;
}

button:not(:disabled) {
  cursor: pointer;
}

.keyboard-nav button:focus {
  outline: var(--outline);
  outline-offset: var(--outline-offset);
}

.container {
  position: relative;

  margin: auto;
  padding: var(--container-padding);
  max-width: var(--container-max-width);
}

.container.init {
  visibility: hidden;
}

img#logo {
  position: absolute;
  height: 80px;
}

h1,
h2 {
  margin: 0;
}

button.shuffle {
  display: flex;
  align-items: center;
  justify-content: center;

  margin: 0 auto;
  width: calc(150px * var(--button-scale-factor));
  height: calc(50px * var(--button-scale-factor));

  background-color: var(--button-background-color);
  border: 3px solid var(--button-border-and-text-color);
  border-radius: calc(10px * var(--button-scale-factor)) 0;
  outline: none;

  font-family: inherit;
  font-size: calc(1rem * var(--button-scale-factor));
  color: var(--button-border-and-text-color);
}

button.shuffle img {
  margin-bottom: 0.1em;
  margin-left: 0.5em;
  height: 1.2em;
}

button.shuffle#shuffle-all {
  --button-scale-factor: 1.2;
  margin: 10px auto 20px;
}

button.shuffle:active {
  background-color: var(--button-background-color-hover);
}

@media (hover: hover) {
  button.shuffle:hover {
    background-color: var(--button-background-color-hover);
  }
}

button.shuffle:disabled {
  background-color: var(--button-background-color-disabled);
  border-color: var(--button-border-and-text-color-disabled);
  color: var(--button-border-and-text-color-disabled);
}

.container.show-settings button.shuffle:disabled {
  background-color: var(--button-background-color-settings);
  border-color: var(--button-border-and-text-color);
  color: var(--button-border-and-text-color);
}

button#settings {
  position: absolute;
  top: calc(var(--container-padding) / 2);
  right: var(--container-padding);

  display: flex;
  flex-direction: column;
  align-items: center;

  background: none;
  border: none;
  border-radius: 10px;
  width: 70px;
  padding: 10px 0;

  font-family: inherit;
  font-size: 0.7rem;
  color: var(--icon-button-text-color);
}

button#settings img {
  width: 50px;
  height: 50px;
}

button#settings:active {
  background-color: var(--icon-button-background-color-hover);
}

button#settings:active img {
  filter: brightness(var(--icon-button-image-brightness-hover));
}

@media (hover: hover) {
  button#settings:hover img {
    filter: brightness(var(--icon-button-image-brightness-hover));
  }
}

button#settings:disabled {
  opacity: 0.6;
}

.container.show-settings button#settings {
  position: fixed;
}

.container:not(.show-settings) button#settings .hide {
  display: none;
}

.container.show-settings button#settings .show {
  display: none;
}

.sections {
  display: grid;
  justify-content: center;
  grid-template-columns: auto auto auto auto;
  gap: 0 calc(20px * var(--layout-scale-factor));

  margin-top: 30px;
}

.section {
  margin: 10px 0;
  perspective: calc(800px * var(--layout-scale-factor));
}

.options {
  margin: 0 auto;
  padding: 0 10px;
  width: calc(var(--card-width) - 20px);
}

.container:not(.show-settings) .options {
  display: none;
}

.options h3 {
  margin: 10px auto;
  width: 10ch;

  font-size: 1.2rem;
  font-weight: bold;
  text-align: center;
}

.option {
  position: relative;
  display: flex;
  align-items: center;

  margin: 0.5rem 0;

  cursor: pointer;
}

.option.all {
  font-weight: bold;
}

.option.set {
  font-style: italic;
}

.option.set-member {
  margin-left: 30px;
}

.option input {
  position: absolute;

  height: 0;
  width: 0;

  opacity: 0;
  cursor: pointer;
}

.checkmark {
  position: relative;
  flex: none;
  margin-right: 8px;

  box-sizing: border-box;
  width: 20px;
  height: 20px;

  border: 2px solid var(--checkbox-border-and-check-color);
}

.checkmark:after {
  content: "";

  position: absolute;
  display: none;
  left: 5px;

  width: 5px;
  height: 10px;

  border: solid var(--checkbox-border-and-check-color);
  border-width: 0 2px 2px 0;

  transform: rotate(40deg);
}

:checked ~ .checkmark:after {
  display: block;
}

.keyboard-nav input:focus ~ .checkmark {
  outline: var(--outline);
  outline-offset: var(--outline-offset);
}

input:active ~ .checkmark {
  background-color: var(--checkbox-background-color-hover);
}

@media (hover: hover) {
  label:hover input ~ .checkmark {
    background-color: var(--checkbox-background-color-hover);
  }
}

.slot {
  position: relative;

  margin: auto;
  width: var(--card-width);
  height: calc(var(--card-header-height) + var(--card-height));

  transform-style: preserve-3d;
}

.slot.landscape {
  width: var(--card-height);
  height: calc(var(--card-header-height) + var(--card-width));
}

.slot.flipping {
  transform: rotateY(720deg);
}

.container:not(.init) .slot {
  transition: transform var(--flip-duration), width var(--card-change-duration),
    height var(--card-change-duration);
}

.container:not(.init) .slot.flipped {
  transition: none;
}

.container.show-settings .slot {
  display: none;
}

.header {
  display: flex;
  flex-direction: column;
  justify-content: center;

  height: var(--card-header-height);
}

h3.name {
  margin: 0;
  padding: 0 10px;

  font-size: 1.2rem;
  font-weight: normal;
  text-align: center;
}

.card {
  width: var(--card-width);
  height: var(--card-height);

  transform-style: preserve-3d;
  transform-origin: calc(var(--card-height) / 2) calc(var(--card-height) / 2);
}

.slot.landscape .card {
  transform: rotate(90deg);
}

.container:not(.init) .card {
  transition: transform var(--card-change-duration);
}

img.front,
img.back {
  position: absolute;
  width: 100%;
  backface-visibility: hidden;
}

img.back {
  transform: rotateY(-180deg);
}

/* This breakpoint value should be the same as --container-max-width. */
@media (min-width: 1600px) {
  .container.show-settings button#settings {
    margin-right: calc(
      (100% - var(--container-max-width)) / 2 - var(--container-padding)
    );
  }
}

@media (max-width: 1400px) {
  :root {
    --layout-scale-factor: 0.85;
  }

  .name {
    font-size: 1.1rem;
  }
}

@media (max-width: 1200px) {
  :root {
    --layout-scale-factor: 0.7;
  }

  .name {
    font-size: 1rem;
  }
}

@media (max-width: 1000px) {
  .sections {
    grid-template-columns: auto auto;
  }
}

@media (max-width: 600px) {
  img#logo {
    position: relative;
    display: block;

    margin: 0 auto 20px auto;
  }

  .sections {
    grid-template-columns: auto;
    margin-top: 0;
  }
}
